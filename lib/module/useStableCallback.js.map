{"version":3,"names":["useCallback","useRef","useStableCallback","cb","cbRef","current","stableCb","args"],"sources":["useStableCallback.ts"],"sourcesContent":["// Utility hook that returns a function that never has stale dependencies, but\n// without changing identity, as a useCallback with dep array would.\n// Useful for functions that depend on external state, but\n// should not trigger effects when that external state changes.\n\nimport { useCallback, useRef } from \"react\";\n\nexport function useStableCallback<\n  T extends (arg1?: any, arg2?: any, arg3?: any) => any\n>(cb: T) {\n  const cbRef = useRef(cb);\n  cbRef.current = cb;\n  const stableCb = useCallback(\n    (...args: Parameters<T>) => cbRef.current(...args),\n    []\n  );\n  return stableCb as T;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAE3C,OAAO,SAASC,iBAAiBA,CAE/BC,EAAK,EAAE;EACP,MAAMC,KAAK,GAAGH,MAAM,CAACE,EAAE,CAAC;EACxBC,KAAK,CAACC,OAAO,GAAGF,EAAE;EAClB,MAAMG,QAAQ,GAAGN,WAAW,CAC1B,CAAC,GAAGO,IAAmB,KAAKH,KAAK,CAACC,OAAO,CAAC,GAAGE,IAAI,CAAC,EAClD,EACF,CAAC;EACD,OAAOD,QAAQ;AACjB","ignoreList":[]}